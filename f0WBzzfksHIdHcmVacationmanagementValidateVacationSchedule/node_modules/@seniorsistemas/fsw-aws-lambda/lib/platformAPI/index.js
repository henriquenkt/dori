const axiosW = require('./../utils/axios-wrapper');

const Get = (event,primitive,params) => {
    return axiosW.platformGet(event, primitive, params);
};

const Delete = (event,primitive,params) => {
    return axiosW.platformDelete(event, primitive, params);
};

const Head = (event,primitive,params) => {
    return axiosW.platformHead(event, primitive, params);
};

const Post = (event, primitive, data, params) => {
    return axiosW.platformPost(event, primitive, data, params);
};

const Put = (event, primitive, data, params) => {
    return axiosW.platformPut(event, primitive, data, params);
};

const Patch = (event, primitive, data, params) => {
    return axiosW.platformPatch(event, primitive, data, params);
};

const GetWithLambdaToken = (event,primitive,params) => {
    return axiosW.platformGetWithLambdaToken(event, primitive, params);
};

const DeleteWithLambdaToken = (event,primitive,params) => {
    return axiosW.platformDeleteWithLambdaToken(event, primitive, params);
};

const HeadWithLambdaToken = (event,primitive,params) => {
    return axiosW.platformHeadWithLambdaToken(event, primitive, params);
};

const PostWithLambdaToken = (event, primitive, data, params) => {
    return axiosW.platformPostWithLambdaToken(event, primitive, data, params);
};

const PutWithLambdaToken = (event, primitive, data, params) => {
    return axiosW.platformPutWithLambdaToken(event, primitive, data, params);
};

const PatchWithLambdaToken = (event, primitive, data, params) => {
    return axiosW.platformPatchWithLambdaToken(event, primitive, data, params);
};

module.exports = {
    Get,
    Delete,
    Head,
    Post,
    Put,
    Patch,
    GetWithLambdaToken,
    DeleteWithLambdaToken,
    HeadWithLambdaToken,
    PostWithLambdaToken,
    PutWithLambdaToken,
    PatchWithLambdaToken
};
